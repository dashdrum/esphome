substitutions:
  device_name: garage_door
  upper_device_name: Garage Door

esphome:
  name: $device_name

esp8266:
  board: d1_mini

wifi: !include include/wifi_iot.yaml

captive_portal:

# Enable logging
logger:
  level: ERROR

# Enable Home Assistant API
# api:

ota:
  platform: esphome

web_server:
  port: 80

mqtt: !include include/mqtt.yaml

i2c:
  sda: D6
  scl: D5

sensor:
  - platform: am2320
    temperature:
      name: "Garage Temp"
      expire_after: 30min
      accuracy_decimals: 2
      state_topic: $device_name/am2320/temperature/state
    humidity:
      name: "Garage Humidity"
      expire_after: 30min
      accuracy_decimals: 2
      state_topic: $device_name/am2320/humidity/state
    update_interval: 15min
    
  - platform: wifi_signal
    name: WiFi Signal
    update_interval: 30min
    icon: mdi:wifi
    
output:
  - platform: gpio
    pin: D1
    id: output1

button:
  - platform: output
    name: Short Push
    id: push_button
    output: output1
    duration: 600ms     
    
  - platform: output
    name: Long Push
    id: long_push_button
    output: output1
    duration: 8.98s   
      
  - platform: restart
    name: $upper_device_name Restart
    
binary_sensor:
  - platform: gpio
    pin: D7
    name: "Garage Access Door"
    device_class: door
    filters:
      - delayed_on_off: 20ms
      - invert:
    state_topic: $device_name/access_door/state
    
  - platform: gpio
    pin: D2
    name: "Garage Door"
    id: garage_door_sensor
    device_class: door
    filters:
      - delayed_on_off: 20ms
      - invert:
    state_topic: $device_name/garage_door/state
    retain: true

cover:
  - platform: template
    name: "Garage Door"
    device_class: garage
    lambda: |-
      if (id(garage_door_sensor).state) {
        return COVER_OPEN;
      } else {
        return COVER_CLOSED;
      }
    open_action:
      - button.press: push_button
    close_action:
      - button.press: push_button
    stop_action:
      - button.press: push_button
