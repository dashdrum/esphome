substitutions:
  LD1115H_INPUT_PIN: GPIO26
  TXPIN: GPIO1
  RXPIN: GPIO3
  devicename: room_occ_2
  upper_device_name: Room Occ 2

esphome:
  name: $devicename
  friendly_name: $upper_device_name

esp32:
  board: wemos_d1_mini32


# Enable Home Assistant API
api:


ota:
  platform: esphome

wifi: !include include/wifi_iot.yaml
  
captive_portal:

web_server:
  port: 80
  version: 2
  include_internal: true

# Enable logging
logger:
  level: ERROR
  baud_rate: 0


#############################################################################################################################
uart:
  id: uart_bus
  tx_pin: ${TXPIN}
  rx_pin: ${RXPIN}
  baud_rate: 115200
  debug:
    direction: BOTH
    dummy_receiver: true
    after:
      delimiter: "\n"
    sequence:
      - lambda: UARTDebug::log_string(direction, bytes);

switch:
  - platform: safe_mode
    internal: true
    name: use_safe_mode

 
number:
  - platform: template
    name: $upper_device_name Motion Sensitivity
    id: motion_detection_sensitivity
    min_value: 1
    max_value: 240
    initial_value: 120
    optimistic: true
    step: 1
    restore_value: true    
    mode: box
    set_action:
      - uart.write: !lambda
          int cm = (int)x;
          std::string cms = "th1=" + to_string(cm) +" \n";
          return std::vector<unsigned char>(cms.begin(), cms.end());
      - delay: 1s
      - uart.write: "save\n"

  - platform: template
    name: $upper_device_name Presence Sensitivity
    id: presence_detection_sensitivity
    min_value: 1
    max_value: 450
    initial_value: 250
    optimistic: true
    step: 1
    restore_value: true    
    mode: box
    set_action:
      - uart.write: !lambda
                      int cm = (int)x;
                      std::string cms = "th2=" + to_string(cm) +" \n";
                      return std::vector<unsigned char>(cms.begin(), cms.end());
      - delay: 1s
      - uart.write: "save\n"


  - platform: template
    name: $upper_device_name Delay Detection Time
    id: delay_detection_time
    min_value: 1
    max_value: 60
    initial_value: 5
    optimistic: true
    step: 1
    restore_value: true    
    mode: box
    set_action:
      - uart.write: !lambda
                      int cm = (int)x;
                      std::string cms = "dtime=" + to_string(cm) +" \n";
                      return std::vector<unsigned char>(cms.begin(), cms.end());
      - delay: 1s
      - uart.write: "save\n"

  - platform: template
    name: $upper_device_name GPIO Pullup Movement Times
    id: gpio_pullup_mov_times
    min_value: 1
    max_value: 60
    initial_value: 3
    optimistic: true
    step: 1
    restore_value: true    
    mode: box
    set_action:
      - uart.write: !lambda
                      int cm = (int)x;
                      std::string cms = "mov_sn=" + to_string(cm) +" \n";
                      return std::vector<unsigned char>(cms.begin(), cms.end());
      - delay: 1s
      - uart.write: "save\n"

  - platform: template
    name: $upper_device_name GPIO Pullup Occupancy Times
    id: gpio_pullup_occ_times
    min_value: 1
    max_value: 60
    initial_value: 5
    optimistic: true
    step: 1
    restore_value: true    
    mode: box
    set_action:
      - uart.write: !lambda
                      int cm = (int)x;
                      std::string cms = "occ_sn=" + to_string(cm) +" \n";
                      return std::vector<unsigned char>(cms.begin(), cms.end());
      - delay: 1s
      - uart.write: "save\n"

binary_sensor:
  - platform: gpio
    name: $upper_device_name Occupied
    device_class: occupancy
    pin:
      number: ${LD1115H_INPUT_PIN}
      mode:
        input: true
        pulldown: true
    on_state:
      then:
        - if:
            condition:
              lambda: 'return x == true;'
            then:
              - light.turn_on: onboard_led
            else:
              - light.turn_off: onboard_led

button:
  - platform: restart
    name: $upper_device_name Restart
    
sensor:
    
  - platform: wifi_signal
    name: $upper_device_name WiFi Signal
    update_interval: 30min
    icon: mdi:wifi
      
light:
  - platform: status_led
    id: onboard_led
    pin:
      number: GPIO2
      inverted: true
